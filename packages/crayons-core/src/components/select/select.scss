/**
  @prop --fw-select-border: Border of the select component
  @prop --fw-select-border-radius: Border radius of the select component
  @prop --fw-select-margin-bottom: Bottom margin of the select component
  @prop --fw-hint-color: Color of the hint text.
  @prop --fw-warning-color: Color of the warning text.
  @prop --fw-error-color: Color of the error text.
*/

@import '../../function-components/field-control.scss';

$label-font: $font-stack;
$input-bg: $color-milk;
$help-color: $muted-secondary;
$error-color: $color-persimmon-800;
$input-color: $color-elephant-900;
$input-disabled-bg: $color-smoke-25;
$input-hover-color: $color-smoke-700;
$input-focus-color: $color-azure-800;
$input-border: $color-smoke-100;
$warning-color: $color-casablanca-300;

@mixin stateStyle($_color) {
  border-color: $_color;

  & > span.help-block {
    color: $_color;
  }
}
:host {
  display: block;
}

// Label Style
// label {
//   font-size: $font-size-12;
//   font-weight: $font-weight-600;
//   color: $color-smoke-700;
//   margin-bottom: 0;
//   line-height: 20px;
//   padding-bottom: 4px;
//   padding-left: 2px;
//   display: block;

//   &.required::after {
//     content: '*';
//     position: relative;
//     display: inline-block;
//     top: 2px;
//     font-size: $font-size-14;
//     color: $error-color;
//     padding-left: 2px;
//   }
// }

.input-container {
  width: calc(100% - 10px);
  border: var(--fw-select-border, 1px solid $input-border);
  border-radius: var(--fw-select-border-radius, 4px);
  padding-left: 10px;
  background-color: $input-bg;
  box-shadow: none;
  min-height: 22px;
  display: flex;
  align-items: center;

  .input-container-inner {
    display: flex;
    flex-grow: 1;
    flex-wrap: wrap;

    .tag-container {
      display: flex;
      flex-wrap: wrap;

      fw-tag {
        margin: 4px 4px 4px 0px;
      }
    }

    input {
      flex-grow: 1;
      border: none;
      font-size: $font-size-14;
      font-weight: $font-weight-500;
      letter-spacing: 0;
      line-height: 1.4;
      background-color: $input-bg;
      min-width: 20px;
      min-height: 22px;
      box-sizing: border-box;
      overflow: hidden;
      margin: 4px 0px;

      &:focus {
        border: none;
        outline: none;
      }

      &.multi-select {
        width: auto;
      }

      &:disabled {
        background-color: $input-disabled-bg !important;
        border-color: transparent;
        cursor: not-allowed;
      }
    }
  }

  fw-spinner {
    margin-right: 8px;
  }

  @media (prefers-reduced-motion) {
    &:hover,
    &:focus {
      transition: none;
    }
  }
  /* stylelint-disable */
  &:hover,
  &:focus {
    border: 1px $input-hover-color solid;
    transition: 0.2s linear;
  }

  &.error {
    @include stateStyle($error-color);
  }

  &.warning {
    @include stateStyle($warning-color);
  }

  &.select-disabled {
    color: $color-smoke-50;
    background-color: $input-disabled-bg !important;
    border-style: solid;
    cursor: not-allowed;

    &:hover {
      border: 1px solid $input-border;
    }
  }
}

:host(.has-focus) {
  .input-container {
    outline: none;
    background: $input-bg;
    border: 1px solid transparent;
    box-shadow: 0 0 0 2px $input-focus-color;

    &.error {
      @include stateStyle($error-color);
      box-shadow: none;
    }

    &.warning {
      @include stateStyle($warning-color);
      box-shadow: 0 0 0 1px $warning-color;
    }
  }
}

.select-container {
  margin-bottom: var(--fw-select-margin-bottom, 0px);
  width: inherit;
  height: inherit;
  position: relative;

  .dropdown {
    z-index: 99;
  }

  .dropdown-status-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 20px;
    min-height: 20px;
    transition: all 0.15s;
    --icon-color: $color-elephant-800;
  }

  //Help Block
  .help-block {
    font-size: $font-size-12;
    margin-top: 4px;
    line-height: 20px;
    color: $help-color;
    position: inherit;
    margin-bottom: 0;
    display: block;
    padding-left: 2px;
  }

  .dropdown-status-icon.expanded {
    transform: rotate(180deg);
  }

  &.error {
    @include stateStyle($error-color);
  }

  &.warning {
    @include stateStyle($warning-color);
  }
}

::placeholder {
  color: $color-smoke-300;
  opacity: 1;
}

:-ms-input-placeholder {
  color: $color-smoke-300;
}

::-ms-input-placeholder {
  color: $color-smoke-300;
}
